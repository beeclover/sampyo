name: üõ† build code deploy
on:
  release:
    types: [published]
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    # if: ${{ github.event.repository.owner.name == 'peterosea' }}
    name: üó≥ Theme source build & rsync
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        working-directory: ${{ env.working-directory }}
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ${{ env.working-directory }}/node_modules/
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: üèó setup-node
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - name: Install Dependencies
        if: ${{steps.yarn-cache.outputs.cache-hit}} != 'true'
        working-directory: ${{ env.working-directory }}
        run: |
          cd Theme
          yarn install
      - name: üî® yarn install & build
        run: |
          cd Theme
          yarn build:production

      - name: üìÇ Sync files to Server
        uses: AEnterprise/rsync-deploy@v1.0
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOYSERVER_KEY }}
          SERVER_PORT: ${{ secrets.DEPLOYSERVER_RSYNC_PORT }}
          FOLDER: "./Theme/public"
          ARGS: "-rltgoDzvO --ignore-times"
          SERVER_IP: ${{ secrets.DEPLOYSERVER_HOST }}
          USERNAME: ${{ secrets.DEPLOYSERVER_USERNAME }}
          SERVER_DESTINATION: "/root/www/Theme"
